kind: pipeline
type: docker
name: Build & Release

trigger:
  event:
    - push

steps:
  # Shaders workaround - prepare
  - name: shaders-workaround-prepare
    image: alpine
    commands:
      - apk add --no-cache zip
      - |
        if [ -d "assets/minecraft/shaders" ]; then
          zip -r shaders.zip assets/minecraft/shaders
          rm -r assets/minecraft/shaders
        fi

  - name: print-token
    image: alpine
    environment:
      GHCR_USERNAME:
        from_secret: GHCR_USERNAME
      GHCR_TOKEN:
        from_secret: GHCR_TOKEN
    commands:
    - echo "$GHCR_USERNAME $GHCR_TOKEN"

  # Build with PackSquash
  - name: build-pack
    image: ghcr.io/comunidadaylas/packsquash-action:master
    environment:
      PACKSQUASH_OPTIONS: packsquash_options.toml
      GHCR_USERNAME:
        from_secret: GHCR_USERNAME
      GHCR_TOKEN:
        from_secret: GHCR_TOKEN
    commands:
      - packsquash --options $PACKSQUASH_OPTIONS --output gamula.zip

  # Shaders workaround - finalize
  - name: shaders-workaround-finalize
    image: alpine
    commands:
      - apk add --no-cache unzip zip
      - |
        if [ -f "shaders.zip" ]; then
          unzip shaders.zip -d .
          rm shaders.zip
          zip -ur gamula.zip assets/minecraft/shaders
        fi

  # Hash the output file
  - name: hash-output
    image: alpine
    commands:
      - apk add --no-cache bash coreutils
      - HASH=$(sha256sum gamula.zip | cut -d " " -f 1)
      - echo "Exporting pack hash to $HASH"
      - echo "pack_hash=$HASH" >> .drone.env

  # Configure Git for tagging
  - name: configure-git-user
    image: alpine/git
    commands:
      - git config --local user.email "no-reply@github.com"
      - git config --local user.name "Drone CI"

  # Tag and release
  - name: release-to-github
    image: alpine
    environment:
      GITHUB_TOKEN:
        from_secret: GITHUB_TOKEN
    commands:
      - apk add --no-cache curl jq
      - |
        curl -X POST \
          -H "Authorization: token ${GITHUB_TOKEN}" \
          -H "Content-Type: application/json" \
          -d '{
                "tag_name": "v${DRONE_BUILD_NUMBER}-stable",
                "target_commitish": "main",
                "name": "Release v${DRONE_BUILD_NUMBER}-stable",
                "body": "commit: ${DRONE_COMMIT_MESSAGE}\nhash: ${pack_hash}",
                "draft": false,
                "prerelease": false
              }' \
          https://api.github.com/repos/Gamula/gamula-pack/releases

