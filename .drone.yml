kind: pipeline
type: docker
name: Build & Deploy
trigger:
  event:
    - push
steps:
  # Shaders workaround - prepare (only for main)
  - name: shaders-workaround-prepare
    image: alpine
    when:
      branch:
        - main
    commands:
      - apk add --no-cache zip
      - |
        if [ -d "assets/minecraft/shaders" ]; then
          zip -r shaders.zip assets/minecraft/shaders
          rm -r assets/minecraft/shaders
        fi

  # Build with PackSquash (only for main)
  - name: build-with-packsquash
    image: alpine
    when:
      branch:
        - main
    commands:
      - ./bin/packsquash packsquash_options.toml

  # Shaders workaround - finalize (only for main)
  - name: shaders-workaround-finalize
    image: alpine
    when:
      branch:
        - main
    commands:
      - apk add --no-cache unzip zip
      - |
        if [ -f "shaders.zip" ]; then
          unzip shaders.zip -d .
          rm shaders.zip
          zip -ur gamula.zip assets/minecraft/shaders
        fi

  # Build pack (for all branches, ensures the same ZIP naming)
  - name: build-pack
    image: alpine
    commands:
      - apk add --no-cache zip
      - ZIP_FILE="gamula-${DRONE_BUILD_NUMBER}.zip"
      - echo "Creating $ZIP_FILE"
      - |
        if [ "$DRONE_BRANCH" == "main" ]; then
          mv gamula.zip "$ZIP_FILE"
        else
          zip -r "$ZIP_FILE" .
        fi

  # Hash the output file
  - name: hash-output
    image: alpine
    commands:
      - apk add --no-cache bash coreutils
      - ZIP_FILE="gamula-${DRONE_BUILD_NUMBER}.zip"
      - HASH=$(sha256sum "$ZIP_FILE" | cut -d " " -f 1)
      - echo "pack_hash=$HASH"
  #
  # # Deploy Resource Pack using sshpass + sftp (for all branches)j
  # - name: deploy-resource-pack
  #   image: alpine
  #   environment:
  #     SFTP_HOST:
  #       from_secret: SFTP_HOST
  #     SFTP_USERNAME:
  #       from_secret: SFTP_USERNAME
  #     SFTP_PASSWORD:
  #       from_secret: SFTP_PASSWORD
  #   commands:
  #     - apk add --no-cache openssh sshpass
  #     - ZIP_FILE="gamula-${DRONE_BUILD_NUMBER}.zip"
  #     - echo "Uploading $ZIP_FILE to $SFTP_HOST via SFTP"
  #     - |
  #       sshpass -p "$SFTP_PASSWORD" sftp -oBatchMode=no -o StrictHostKeyChecking=no -b - $SFTP_USERNAME@$SFTP_HOST <<EOF
  #       put $ZIP_FILE
  #       bye
  #       EOF
  #
  - name: notify-discord
    image: appleboy/drone-discord
    settings:
      webhook_id:
        from_secret: discord_id
      webhook_token:
        from_secret: discord_token
      when:
        status: [ success, failure, changed ]

