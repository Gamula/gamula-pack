stages:
  - build
  - hash
  - deploy
  - notify

variables:
  ZIP_FILE: "pack-${CI_PIPELINE_ID}.zip"

build-pack:
  stage: build
  image: alpine
  script:
    - apk add --no-cache zip
    - cd pack
    - echo "Creating $ZIP_FILE"
    - |
      if [ "$CI_COMMIT_BRANCH" == "main" ]; then
        mv pack.zip "$ZIP_FILE"
      else
        zip -r "$ZIP_FILE" .
    - echo "ZIP file created: $ZIP_FILE"
  artifacts:
    paths:
      - pack/$ZIP_FILE
    expire_in: 1 day

hash-output:
  stage: hash
  image: alpine
  dependencies:
    - build-pack
  script:
    - apk add --no-cache bash coreutils
    - cd pack
    - HASH=$(sha1sum "$ZIP_FILE" | cut -d " " -f 1)
    - echo "pack_hash=$HASH"
    - echo "pack_hash=$HASH" >> ../.env
  artifacts:
    reports:
      dotenv: .env

deploy-resource-pack:
  stage: deploy
  image: alpine
  dependencies:
    - build-pack
  environment:
    name: production
  script:
    - apk add --no-cache openssh sshpass
    - cd pack
    - echo "Uploading $ZIP_FILE to $SFTP_HOST via SFTP"
    - |
      sshpass -p "$SFTP_PASSWORD" sftp -oBatchMode=no -o StrictHostKeyChecking=no -b - $SFTP_USERNAME@$SFTP_HOST <<EOF
      put $ZIP_FILE
      bye
      EOF
  only:
    - branches
  before_script:
    - export SFTP_HOST=$CI_ENV_SFTP_HOST
    - export SFTP_USERNAME=$CI_ENV_SFTP_USERNAME
    - export SFTP_PASSWORD=$CI_ENV_SFTP_PASSWORD

discord-notification:
  stage: notify
  image: alpine
  dependencies:
    - deploy-resource-pack
  environment:
    name: notify
  script:
    - apk add --no-cache curl jq
    - ./scripts/notify.sh
  only:
    - branches
  before_script:
    - export DISCORD_WEBHOOK_URL=$CI_ENV_DISCORD_WEBHOOK_URL

